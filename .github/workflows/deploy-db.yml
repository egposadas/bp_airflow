name: deploy-db
on: workflow_dispatch

jobs:
  build:
    name: Build
    runs-on: [ self-hosted ]
    steps:
    - uses: actions/checkout@v2
    - name: Login to Artifactory
      uses: actions/login-action@v1
      with:
        registry: ${{ secrets.ARTIFACTORY_HOST }}
        username: ${{ secrets.ARTIFACTORY_USERNAME }}
        password: ${{ secrets.ARTIFACTORY_PASSWORD }}
    - name: Build and push to Artifactory
      uses: actions/build-push-action@v2
      with:
        push: true
        tags: ${{ secrets.ARTIFACTORY_HOST }}/${{ secrets.APP_NAME }}:latest
    - name: Kubernetes installation
      uses: actions/setup-kubectl@v2.0
      with:
        version: v1.23.6
      id: install
    - name: Kubernetes configuration
      run: |
        rm -f ${HOME}/.kube/config
        kubectl config set-cluster ${{ secrets.KUBE_CLUSTER }} --server=https://kubernetes.platform.tesla.com/${{ secrets.KUBE_CLUSTER }}
        kubectl config set-credentials dummy-user --token=${{ secrets.KUBE_TOKEN }}
        kubectl config set-context ${{ secrets.KUBE_NAMESPACE }} --cluster=${{ secrets.KUBE_CLUSTER }} --user=dummy-user --namespace=${{ secrets.KUBE_NAMESPACE }}
        kubectl config use-context ${{ secrets.KUBE_NAMESPACE }}
    - name: Artifactory secret
      run: |
        kubectl --insecure-skip-tls-verify=true create --save-config --dry-run=client -o yaml secret docker-registry ${{ secrets.APP_NAME }}-regcred --docker-server="${{ secrets.ARTIFACTORY_HOST }}" --docker-username="${{ secrets.ARTIFACTORY_USERNAME }}" --docker-password="${{ secrets.ARTIFACTORY_PASSWORD }}" | kubectl apply -f -
    - name: Kubernetes secret
      run: |
        echo '${{ toJSON(secrets) }}' | head -n -1 | tail -n +2 | sed "s/^[[:space:]]*//" | sed "s/,$//" | sed "s/^\"//" | sed "s/\": \"/=/" | sed "s/\"$//" | grep "^K8S_" | sed "s/^K8S_//" > .env
        kubectl --insecure-skip-tls-verify=true create --save-config --dry-run=client -o yaml secret generic ${{ secrets.APP_NAME }}-env --from-env-file=.env | kubectl apply -f -
    - name: Kubernetes annotations
      run: |
        find . -type f -name "kustomization.yml" -print0 | xargs -0 sed -i "s/app: .*$/app: ${{ secrets.APP_NAME }}/"
    - name: Kubernetes deployment
      run: |
        kubectl --insecure-skip-tls-verify=true apply -k templates.d/redis.d/
        kubectl --insecure-skip-tls-verify=true apply -k templates.d/mysql.d/
    - name: Kubernetes roll-out
      run: |
        kubectl --insecure-skip-tls-verify=true rollout restart deployment ${{ secrets.APP_NAME }}-redis
        kubectl --insecure-skip-tls-verify=true rollout restart deployment ${{ secrets.APP_NAME }}-mysql
